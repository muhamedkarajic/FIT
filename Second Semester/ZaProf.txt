#include <iostream>
#include <memory>
using namespace std;



void funkcija()
{
	cout << "Funkcija" << endl;
}

void funkcija2()
{
	cout << "Funkcija2" << endl;
}

int Saberi(int a, int b)
{
	return a + b;
}

double SaberiDouble(double a, double b)
{
	return a + b;
}

void (*getPokNaF(int x))()
{
	if (x == 1)
		return funkcija;
	else
		return funkcija2;
}

void ispis(unique_ptr<int> &Uni_Ptr, int n)
{
	for (size_t i = 0; i < n; i++)
		cout << Uni_Ptr.get()[i] << endl;
}


int main()
{
	void(*p)() = funkcija;
	int(*saberiPok)(int, int) = Saberi;
	double(*saberiDoublePok)(double, double) = SaberiDouble;

	cout << saberiDoublePok(4.555, 43.311) << endl;
	cout << saberiPok(4, 23) << endl;
	p();

	void(*pokNaF[2])() = { nullptr };
	for (size_t i = 0; i < 2; i++)
		pokNaF[i] = getPokNaF(i);

	for (size_t i = 0; i < 2; i++)
		pokNaF[i]();

	int a;
	unique_ptr<int> Uni_Ptr(new int[5]);

	for (size_t i = 0; i < 5; i++)
		cin >> Uni_Ptr.get()[i];




	ispis(Uni_Ptr, 5);
	
	
	
	for (size_t i = 0; i < 5; i++)
		cout << Uni_Ptr.get()[i] << endl;




	system("PAUSE");
	return 0;
}